name: Update Changelog

# 在推送新标签时触发工作流
on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  update-changelog:
    name: Update CHANGELOG.md
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get tag information
        id: tag_info
        run: |
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          CURRENT_DATE=$(date +'%Y-%m-%d')
          echo "current_tag=$CURRENT_TAG" >> $GITHUB_OUTPUT
          echo "current_date=$CURRENT_DATE" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG.md
        run: |
          # 创建新版本条目
          cat > new_entry.md << 'EOF'
          ## [${{ steps.tag_info.outputs.current_tag }}] - ${{ steps.tag_info.outputs.current_date }}
          
          ### 新增
          - 发布版本 ${{ steps.tag_info.outputs.current_tag }}
          
          ### 更改
          - 版本更新和改进
          
          ### 修复
          - Bug 修复和性能优化
          
          EOF
          
          # 读取现有的 CHANGELOG.md
          if [ -f CHANGELOG.md ]; then
            # 查找 "## [未发布]" 部分的结束位置
            UNRELEASED_END=$(grep -n "^## \[" CHANGELOG.md | grep -v "未发布" | head -1 | cut -d: -f1)
          
            if [ -n "$UNRELEASED_END" ]; then
              # 在未发布部分后插入新条目
              head -n $((UNRELEASED_END - 1)) CHANGELOG.md > temp_changelog.md
              cat new_entry.md >> temp_changelog.md
              tail -n +$UNRELEASED_END CHANGELOG.md >> temp_changelog.md
            else
              # 如果没找到其他版本，直接在文件末尾添加
              cp CHANGELOG.md temp_changelog.md
              cat new_entry.md >> temp_changelog.md
            fi
          else
            # 如果 CHANGELOG.md 不存在，创建新文件
            cat > temp_changelog.md << 'EOF'
          # 更新日志
          
          本文档记录了 mihomo-rs 项目的所有重要更改。
          
          格式基于 [Keep a Changelog](https://keepachangelog.com/zh-CN/1.0.0/)，
          并且本项目遵循 [语义化版本](https://semver.org/lang/zh-CN/)。
          
          ## [未发布]
          
          ### 计划中
          - 支持更多代理协议
          - 图形界面支持
          - 插件系统
          - 配置文件模板
          
          EOF
            cat new_entry.md >> temp_changelog.md
          fi
          
          # 替换原文件
          mv temp_changelog.md CHANGELOG.md
          
          # 清理临时文件
          rm -f new_entry.md

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # 检查是否有更改
          if git diff --quiet CHANGELOG.md; then
            echo "CHANGELOG.md 没有更改，跳过提交"
          else
            git add CHANGELOG.md
            git commit -m "docs: 自动更新 CHANGELOG.md for ${{ steps.tag_info.outputs.current_tag }}"
            git push origin HEAD:main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}